version: '3.8'

services:
  aabot:
    build: .
    container_name: aabot-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://aabot:${POSTGRES_PASSWORD}@postgres:5432/aabot
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/bot/status', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - aabot-network

  postgres:
    image: postgres:15-alpine
    container_name: aabot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: aabot
      POSTGRES_USER: aabot
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aabot -d aabot"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aabot-network

networks:
  aabot-network:
    driver: bridge

volumes:
  postgres_data: